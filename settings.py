"""
    This is the main settings file for the Home Server.
    Here are specified all global variables that can be costumized to allow
    the Home Server to work differently of its regular behaviour.
"""
import utils
import os

__author__ = "Jose Requeijo Dias"

ROOT = os.path.dirname(__file__)


"""
Specification of the Home Server configurations folder and file names.
Each one of these files stores the main configurations for the Home Server.
These Files are updated each time the Home Server start/restart and each time new
configurations are added/updated on the online cloud service.
"""
CONFIGS_ROOT = ROOT+"/config/"

SERVER_CONFIG_FILE = CONFIGS_ROOT+"serverconf.json"
DEVICE_TYPES_CONFIG_FILE = CONFIGS_ROOT+"device_types.json"
PROPERTY_TYPES_CONFIG_FILE = CONFIGS_ROOT+"property_types.json"
VALUE_TYPES_CONFIG_FILE = CONFIGS_ROOT+"value_types.json"
SERVICES_CONFIG_FILE = CONFIGS_ROOT+"services.json"


LOG_TO_TERMINAL = False

if LOG_TO_TERMINAL:
    LOGGING_CONFIG_FILE = CONFIGS_ROOT+"logging_terminal.conf"
else:
    LOGGING_CONFIG_FILE = CONFIGS_ROOT+"logging.conf"

"""
Specification of the debug and the quiet settings for the Home Server
Debug setting works to give or not exception stack like responses when an error
occurs instead of only the response error code.
Quiet setting works to enable/disable proxy logging to terminal.
"""
DEBUG = True
QUIET = True

"""
Specification of the IP address and port for the Proxy and the CoAP server
"""
PROXY_ADDR = utils.get_my_ip(public=True)
PROXY_PORT = 8080

COAP_ADDR = utils.get_my_ip()
COAP_PORT = 5683
COAP_MULTICAST = False

HOME_SERVER_TIMEOUT = 40

"""
Specification of the default timeouts for the requests between the proxy and the
CoAP Server and for the monitoring of devices by the Home Server. All timeouts
are values on seconds.
"""
COMM_TIMEOUT = 5
DEVICES_MONITORING_TIMEOUT = 15
ENDPOINT_DEFAULT_TIMEOUT = 60

"""
Specification of the cloud service URL and the working offline setting for the
Home Server.
When the ALLOW_WORKING_OFFLINE is set to False the HomeServer only works if it
has connection with the mHouse cloud service specified by the URL. If it is set
to True the Home Server works without internet connection but the devices are only
reachable from the local Home Server's REST API.
"""
CLOUD_BASE_URL = "http://mhouseframework.eu-west-1.elasticbeanstalk.com/"
ALLOW_WORKING_OFFLINE = False


"""
AWS Integration Section.
To use the Home Server totally integrated with the AWS IoT Platform set the varible
AWS_INTEGRATION to True. You MUST configure your AWS credentials on your system. To
do that you could download the AWS CLI which will help you configure the credentials.
It is also advisable to read the AWS Cloud SDK documentation:
    + https://boto3.readthedocs.io/en/latest/index.html
    + http://docs.aws.amazon.com/iot/latest/developerguide/what-is-aws-iot.html
    + https://github.com/aws/aws-iot-device-sdk-python/blob/master/README.rst

All the AWS integration code is located inside the cloudcommunicators directory,
specifically on the aws_comm.py and cloudcomm.py modules.
For more information check the mHouse Framework online help and documentation.
"""
AWS_INTEGRATION = False
# You can specify here your AWS credentials or use the environment configurations
# generated by the AWS CLI when you configure your credentials.
AWS_ACCESS_KEY_ID = "AKIAIP72A4CHN2O6ZLRA"
AWS_SECRET_ACCESS_KEY = "Co38B1fDLmVqrU52LoIbJJTeYXXNPfCV3tnjydRp"